const cardGame=document.querySelectorAll(".cardGame"),myaudio=(// Seclectionne toute les cartes de Jeu
cardGame.forEach(o=>{
// Parcours toute les cartes de Jeu
o.addEventListener("mousemove",e=>{
// Permet d'écouter l'évenement quand la souris bouge
var t=o.getBoundingClientRect(),a=e.clientX-t.x,e=e.clientY-t.y,r=-(a-t.width/2)/8,n=(e-t.height/2)/8,a=a/t.width*100,e=e/t.height*100;// Recupération de l'objet DOMRect (Permet de recupérer X et Y et d'accéder à la largeur et la hauteur de l'élement)
// Position en y de la souris qui va modifier la position de mon effet glow (*100 pour obtenir un ratio)
o.children[0].style.transform=`rotateX(${n}deg) rotateY(${r}deg) scale(1.5)`,// On applique les angles au premier enfant en modifiant la propriété transform pour jouer sur nos rotations (Agrandissement du contenu avec le "scale")
o.children[1].style.transform=`rotateX(${n}deg) rotateY(${r}deg) scale(1.5)`,// On applique les angles au deuxième enfant en modifiant la propriété transform pour jouer sur nos rotations (Agrandissement du contenu avec le "scale")
o.children[1].style.background=`radial-gradient(circle at ${a}% ${e}%, rgb(255, 255, 255,0.8), transparent)`}),o.addEventListener("mouseleave",()=>{
// Permet d'écouter l'évenement quand la souris quitte mon élément
o.children[0].style.transform="rotateX(0) rotateY(0)",// Quand la souris quitte l'élément remise à 0
o.children[1].style.transform="rotateX(0) rotateY(0)"})}),document.querySelector("audio"));let isPlaying=!1;
//Fonction pour savoir si l'audio est sur pause ou sur play
function tooglePlay(){isPlaying?myaudio.pause():myaudio.play()}
//Fonction pour jouer la musique et régler le volume
myaudio.onplaying=function(){myaudio.volume=.1,isPlaying=!0},
// Fonction pour mettre en pause la musique
myaudio.onpause=function(){isPlaying=!1};